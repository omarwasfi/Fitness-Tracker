@page "/register"

@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="col-md-6 offset-md-3 mt-5">

    <div class="card">
        <h4 class="card-header">Blazor WebAssembly JWT Login Example</h4>
        <div class="card-body">
            <EditForm Model="@registerRequestDataViewModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="registerRequestDataViewModel.Username" class="form-control" />
                    <ValidationMessage For="@(() => registerRequestDataViewModel.Username)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="registerRequestDataViewModel.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => registerRequestDataViewModel.Password)" />
                </div>
                <div class="form-group">
                    <label>Confirm Password</label>
                    <InputText @bind-Value="registerRequestDataViewModel.ConfirmPassword" type="password" class="form-control" />
                    <ValidationMessage For="@(() => registerRequestDataViewModel.ConfirmPassword)" />
                </div>
                <button class="btn btn-primary">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Register
                </button>
                @if (!string.IsNullOrEmpty(error))
                {
                    <div class="alert alert-danger mt-3 mb-0">@error</div>
                }
            </EditForm>
        </div>
    </div>
    <div class="alert alert-info">
        <a href="/Login">You are a member login now.</a>
    </div>
</div>

@code {
    RegisterRequestDataViewModel registerRequestDataViewModel = new RegisterRequestDataViewModel();
    private bool loading;
    private string error;

    protected override void OnInitialized()
    {
        if (AuthenticationService.Token != null)
        {
            NavigationManager.NavigateTo("MyProfile");
        }

        registerRequestDataViewModel = new RegisterRequestDataViewModel();
    }

    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {
            await AuthenticationService.Register(registerRequestDataViewModel);

            //var returnUrl = NavigationManager.QueryString("returnUrl") ?? "/";
            NavigationManager.NavigateTo("MyProfile");

            this.StateHasChanged();

        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }


}
